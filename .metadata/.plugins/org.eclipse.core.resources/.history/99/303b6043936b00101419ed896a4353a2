package com.wellcare.security;

import org.springframework.stereotype.Component;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jws;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.security.Keys;
import java.security.Key;
import java.util.Date;

@Component
public class JwtUtil {

	private final String SECRET = "wellcareSuperSecretKeyForJWT1234567890";
	private final long EXPIRATION = 1000 * 60 * 60; // 1 hr 
	
	private final Key key = Keys.hmacShaKeyFor(SECRET.getBytes());

	//Generate Token with username
	public String generateToken(String username) {
		return Jwts.builder()
				.setSubject(username)
				.setIssuedAt(new Date())
				.setExpiration(new Date(System.currentTimeMillis() + EXPIRATION))
				.signWith(key, SignatureAlgorithm.HS256)
				.compact();
	}
	
	//Extract username from token
	public String extractUsername(String token) {
		return parseToken(token).getBody().getSubject();
	}
	
	
	private Jws<Claims> parseToken(String token) {
		return Jwts.parserBuilder()
				.setSigningKey(key)
				.build()
				.parseClaimsJws(token);
	}
	
	
}
